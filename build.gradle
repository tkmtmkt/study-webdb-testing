allprojects {
  defaultTasks 'assemble'

  group = 'com.github.tkmtmkt'
  version = '1.0-SNAPSHOT'

  repositories {
    flatDir {
      dirs "$rootDir/lib"
    }
  }
}

project(':ears') {
  subprojects {
    apply plugin: 'ear'
  }
}

configure([project(':jars'), project(':test')]) {
  subprojects {
    apply plugin: 'java'

    sourceCompatibility = 8
    targetCompatibility = 8

    def defaultEncoding = 'UTF-8'
    [compileJava, compileTestJava]*.options*.encoding = defaultEncoding

    compileJava {
      options.compilerArgs += ['-Xlint:all']
    }

    javadoc {
      failOnError = false
      options.charSet(defaultEncoding)
    }

    test {
      ignoreFailures = true
      testLogging {
        events 'started', 'skipped', 'passed', 'failed'
      }
    }

    dependencies {
      //プロダクト用（コンパイル、実行、配布）
      compile 'org.slf4j:slf4j-api:1.7.25'

      //プロダクト用（コンパイル）
      compileOnly 'javax:javaee-api:7.0'
      compileOnly 'org.projectlombok:lombok:1.16.18'

      //プロダクト用（実行、配布）
      runtime 'ch.qos.logback:logback-classic:1.2.3'

      //テスト用（コンパイル、実行）
      testCompile 'junit:junit:4.12'
      testCompile 'org.assertj:assertj-core:3.8.0'
      testCompile 'org.mockito:mockito-core:2.10.0'

      //テスト用（コンパイル）
      testCompileOnly 'javax:javaee-api:7.0'

      //テスト用（実行）
      testRuntime 'fish.payara.api:payara-api:4.1.2.172'
      testRuntime 'fish.payara.extras:payara-embedded-all:4.1.2.172'
    }

    task copyDependencies(type: Copy) {
      from configurations.testRuntime {
        exclude {
          it.file.name.startsWith('study-')
        }
      }
      into file("$rootDir/libext")
    }
  }
}
